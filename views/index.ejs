<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title></title>
    <link rel="stylesheet" href="/css/style.css">
    <script type="text/javascript" src="/js/jquery.js"></script>
    <script type="text/javascript" src="/js/script.js"></script>
    <style>
      pre {
        margin: 10px;
        padding: 15px;
        background-color: rgb(43, 43, 43);
        color: #fff;
        width: 600px;
        border-radius: 15px;
      }
      h1 {
        font-size: 30px;
        font-weight: 800;
        margin: 10px;
      }
    </style>
    <script type="text/javascript">
      $(function () {
        var addCount = 1;
        $(".add-btn").on("click", function () {
          addCount++;
          $(".appendInput").append('<input name="fcmtoken'+addCount+'" type="text">');
        });
      });
    </script>
  </head>
  <body>
    <div id="wrap">
      <h1>PUSH 한명 보내기</h1>
      <pre>
        
        const deviceToken = 'send to diviceTokken'
        const message = {
          notification:{
              title:'테스트 발송',
              body:'테스트 푸쉬 알람!',
          },
          sound: 'default',
          token: deviceToken,
          android: {
            notification: {
              sound: 'default'
            },
          },
          apns: {
            payload: {
              aps: {
                sound: 'default'
              },
            },
          }
        }

        fcm.messaging()
        .send(message)
        .then((response) => {
          // 푸쉬 성공
        })
        .catch((error) => {
          // 푸쉬 실패
        });
      </pre>
      <form method="POST" action="/push-message">
        fcmToken : <input name="fcmtoken" type="text">
        <button>발송</button>
      </form>


      <h1>PUSH 여러명 보내기</h1>

      <pre>
        // 한번 발송시 최대 500명
        const deviceTokens = ['token1', 'token2', ...]
        const message = {
          notification:{
              title:'테스트 발송',
              body:'테스트 푸쉬 알람!',
          },
          sound: 'default',
          tokens: deviceTokens,
          android: {
            notification: {
              sound: 'default'
            },
          },
          apns: {
            payload: {
              aps: {
                sound: 'default'
              },
            },
          },
        }

        fcm.messaging()
        .sendMulticast(message)
        .then((response) => {
          if (response.failureCount > 0) {
            const failedTokens = [];
            response.responses.forEach((resp, idx) => {
                if (!resp.success) {
                  failedTokens.push(deviceToken[idx]);
                }
            });
            // 실패 토큰들: failedTokens
          }
        });
      </pre>
      <form method="POST" action="/push-message-multi">
        fcmTokens : 
        <div class="appendInput">
          <input name="fcmtoken1" type="text">
        </div>
        <button class="add-btn" type="button">추가</button>
        <button type="submit">발송</button>
      </form>

      <h1>주제 구독 보내기</h1>

      <pre>
        const topic = 'notice';
        const message = {
          notification:{
            title: '단체 공지',
            body: 'notice를 구독중인 단체공지 알람!',
          },
          sound: 'default',
          topic: topic,
          android: {
            notification: {
              sound: 'default'
            },
          },
          apns: {
            payload: {
              aps: {
                sound: 'default'
              },
            },
          },
        }

        fcm.messaging()
        .send(message)
        .then((response) => {
          // 푸쉬 성공
        })
        .catch((error) => {
          // 푸쉬 실패
        });
      </pre>
      <form method="POST" action="/push-message-topic">
        topic이름 : <input name="topic" type="text" value="notice">
        <button type="submit">발송</button>
      </form>
    </div>
  </body>
</html>
